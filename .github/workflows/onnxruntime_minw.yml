name: onnxruntime(mingw)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "version tag"
        required: true
        default: "v1.6.0"

env:
  package_name: "onnxruntime"
  version: ${{ github.event.inputs.tag }}

jobs:
  init:
    runs-on: windows-latest
    outputs:
      output1: "${{ steps.create_release.outputs.upload_url }}"
    steps:
      - uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true # default: false
          tag_name: ${{ github.event.inputs.tag }}-mingw # tag name to delete
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create tag
        uses: actions/github-script@v3
        with:
          github-token: ${{ github.token }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ github.event.inputs.tag }}-mingw",
              sha: context.sha
            })

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag }}-mingw
          release_name: onnxruntime-${{ github.event.inputs.tag }}-mingw
          draft: false
          prerelease: false
          
      - name: set name
        run: |
          echo "::set-output name=y::${{ steps.create_release.outputs.upload_url }}"
          echo "${{ steps.create_release.outputs.upload_url }}"

  build:
    needs: init
    strategy:
      matrix:
        build_type: ["Debug", "Release"]
        arch: ["x86", "x64"]

    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Build Onnxruntime
        run: |
          git clone -b ${{ github.event.inputs.tag }} --recursive https://github.com/Microsoft/onnxruntime
          . ".\build_onnxruntime_mingw.ps1"
          BuildForWindows ${{matrix.arch}} ${{matrix.build_type}}
          
      - name: Set up MinGW
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: ${{matrix.arch}}


      - name: Compress Package
        run: |
          Xcopy .\onnxruntime\build\Windows\${{matrix.build_type}}\${{matrix.build_type}}\onnxruntime.* .\install\lib /H/C/I
          .\clean_files.bat
          Xcopy .\onnxruntime\include\onnxruntime\core\session .\install\include\onnxruntime /H/C/I
          7z a onnxruntime.zip ./install/* -r

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.init.outputs.output1 }}
          asset_path: onnxruntime.zip
          asset_name: ${{ env.package_name }}-${{ env.version }}-${{matrix.build_type}}-${{matrix.arch}}-${{runner.os}}.zip
          asset_content_type: application/zip
